// Generated by CoffeeScript 1.6.3
(function() {
  var BLACKLIST, acorn, validate, walk, walkall,
    __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  acorn = require('acorn');

  walk = require('acorn/util/walk');

  walkall = require('walkall');

  BLACKLIST = ['BreakStatement', 'ContinueStatement', 'DoWhileStatement', 'DebuggerStatement', 'ForStatement', 'ForInStatement', 'FunctionDeclaration', 'FunctionExpression', 'ReturnStatement', 'ThisExpression', 'ThrowStatement', 'TryStatement', 'WhileStatement', 'WithStatement'];

  validate = function(program) {
    var ast, e, err;
    err = null;
    try {
      ast = acorn.parse(program);
    } catch (_error) {
      e = _error;
      return ['ParseError', e];
    }
    try {
      walk.simple(ast, walkall.makeVisitors(function(node) {
        var _ref;
        if (_ref = node.type, __indexOf.call(BLACKLIST, _ref) >= 0) {
          err = new Error("Node type not allowed: " + node.type);
          err.type = node.type;
          err.start = node.start;
          err.end = node.end;
          throw err;
        }
      }), walkall.traversers);
    } catch (_error) {
      e = _error;
      return ['IllegalConstructError', e];
    }
    return err;
  };

  module.exports = validate;

  /*
  # Examples
  module.exports.prog1 = "for (var i = 0; i < 10; i++) { console.log(i); }"
  module.exports.prog2 = "while (true) console.log"
  module.exports.prog3 = "))(((syntax''ERROR"
  module.exports.prog4 = "x = 1; y = 2; z = x + y;"
  */


}).call(this);
